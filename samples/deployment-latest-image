apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-deployment
  namespace: k8lex
  labels:
    app: sample-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
      - name: sample-container
        image: nginx:latest # Recommended: Use a specific image tag instead of 'latest'
        ports:
        - containerPort: 80
        resources: # Recommended: Define CPU and memory requests and limits
          requests:
            memory: "64Mi"
            cpu: "250m" # 0.25 of a CPU core
          limits:
            memory: "128Mi"
            cpu: "500m" # 0.5 of a CPU core
        livenessProbe: # Recommended: Check if the application is still running
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10 # Give the app time to start
          periodSeconds: 10     # Check every 10 seconds
          timeoutSeconds: 5     # Timeout after 5 seconds
          failureThreshold: 3   # Restart if 3 consecutive probes fail
        readinessProbe: # Recommended: Check if the application is ready to serve traffic
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15 # Give the app more time to become ready
          periodSeconds: 10     # Check every 10 seconds
          timeoutSeconds: 5     # Timeout after 5 seconds
          failureThreshold: 3   # Stop sending traffic if 3 consecutive probes fail
---
apiVersion: v1
kind: Service
metadata:
  name: sample-service
  namespace: k8lex
spec:
  selector:
    app: sample-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer